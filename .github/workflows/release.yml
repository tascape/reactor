#
# Copyright (c) 2015 - present Nebula Bay.
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Manual Maven Central Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Version bump type (patch, minor, major)"
        required: true
        default: "patch"

permissions:
  contents: write  # needed to push tags and version bump commits

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release

    env:
      CENTRAL_TOKEN_USERNAME: ${{ secrets.CENTRAL_TOKEN_USERNAME }}
      CENTRAL_TOKEN_PASSWORD: ${{ secrets.CENTRAL_TOKEN_PASSWORD }}
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # include tags and history

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          server-id: central
          server-username: CENTRAL_TOKEN_USERNAME
          server-password: CENTRAL_TOKEN_PASSWORD
          gpg-private-key: ${{ env.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ env.GPG_PASSPHRASE }}

      - name: Get current version
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Prepare release version
        id: release
        run: |
          RELEASE_VERSION="${{ steps.version.outputs.version }}"
          RELEASE_VERSION="${RELEASE_VERSION%-SNAPSHOT}"
          mvn versions:set -DnewVersion=$RELEASE_VERSION -B
          echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Commit release version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "Release ${{ steps.release.outputs.release_version }}"

      - name: Tag release
        run: |
          git tag v${{ steps.release.outputs.release_version }}

      - name: Publish to Maven Central
        run: mvn clean deploy -B -U

      - name: Determine next version
        id: bump
        run: |
          CURRENT=${{ steps.release.outputs.release_version }}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT"
          TYPE="${{ github.event.inputs.release_type }}"
          case "$TYPE" in
            major) MAJOR=$((MAJOR + 1)); MINOR=0; PATCH=0 ;;
            minor) MINOR=$((MINOR + 1)); PATCH=0 ;;
            patch|*) PATCH=$((PATCH + 1)) ;;
          esac
          NEXT_VERSION="$MAJOR.$MINOR.$PATCH-SNAPSHOT"
          mvn versions:set -DnewVersion=$NEXT_VERSION -B
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Commit and push new snapshot version
        run: |
          git commit -am "Bump version to ${{ steps.bump.outputs.next_version }}"
          git push origin HEAD:master
          git push origin v${{ steps.release.outputs.release_version }}
